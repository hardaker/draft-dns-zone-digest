<?xml version='1.0' encoding='UTF-8' ?> 

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!-- One method to get references from the online citation libraries.
There has to be one entity for each item to be referenced. 
An alternate method (rfc include) is described in the references. -->
<!ENTITY RFC5966 SYSTEM "http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.5966.xml">
<!ENTITY I-D.ietf-tcpm-fastopen SYSTEM "http://xml2rfc.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-tcpm-fastopen">
<!ENTITY I-D.draft-ietf-dnsop-edns-tcp-keepalive SYSTEM "http://xml2rfc.ietf.org/public/rfc/bibxml3/reference.I-D.draft-ietf-dnsop-edns-tcp-keepalive-00.xml">
<!ENTITY RFC1034 PUBLIC '' "http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.1034.xml">
<!ENTITY RFC1035 PUBLIC '' "http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.1035.xml">
<!ENTITY RFC1995 PUBLIC '' "http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.1995.xml">
<!ENTITY RFC2119 PUBLIC '' "http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC2136 PUBLIC '' "http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.2136.xml">
<!ENTITY RFC2629 PUBLIC '' "http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.2629.xml">
<!ENTITY RFC2845 PUBLIC '' "http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.2845.xml">
<!ENTITY RFC4033 PUBLIC '' "http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.4033.xml">
<!ENTITY RFC4034 PUBLIC '' "http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.4034.xml">
<!ENTITY RFC4035 PUBLIC '' "http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.4035.xml">
<!ENTITY RFC5936 PUBLIC '' "http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.5936.xml">
<!ENTITY RFC7706 PUBLIC '' "http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.7706.xml">
<!ENTITY RFC7719 PUBLIC '' "http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.7719.xml">
<!ENTITY RFC3658 PUBLIC '' "http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.3658.xml">
<!ENTITY RFC4509 PUBLIC '' "http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.4509.xml">
<!ENTITY RFC5933 PUBLIC '' "http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.5933.xml">
<!ENTITY RFC6605 PUBLIC '' "http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.6605.xml">
<!ENTITY RRNAME "ZONEMD">
]>


<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>
<?rfc strict="yes" ?>
<?rfc toc="yes"?>
<?rfc tocdepth="4"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes" ?>
<?rfc compact="yes" ?>
<?rfc subcompact="no" ?>

<rfc category="std" docName="draft-dns-zone-message-digest" ipr="trust200902">
  <!-- category values: std, bcp, info, exp, and historic
  ipr values: full3667, noModification3667, noDerivatives3667
  you can add the attributes updates="NNNN" and obsoletes="NNNN" 
  they will automatically be output with "(if approved)" -->

  <!-- ***** FRONT MATTER ***** -->

  <front>
    <!-- The abbreviated title is used in the page header - it is only necessary if the 
    full title is longer than 39 characters -->

    <title abbrev="dns-zone-message-digest">Message Digest for DNS Zones</title>

    <!-- add 'role="editor"' below for the editors if appropriate -->

    <!-- Another author who claims to be an editor -->

    <author fullname="Duane Wessels" initials="D." surname="Wessels">
      <organization>Verisign</organization>
      <address>
        <postal>
          <street>12061 Bluemont Way</street>
          <city>Reston</city>
          <region>VA</region>
          <code>20190</code>
        </postal>
        <phone>+1 703 948-3200</phone>
        <email>dwessels@verisign.com</email>
        <uri>http://verisign.com</uri>
      </address>
    </author>

    <author fullname="Piet Barber" initials="P." surname="Barber">
      <organization>Verisign</organization>
      <address>
        <postal>
          <street>12061 Bluemont Way</street>
          <city>Reston</city>
          <region>VA</region>
          <code>20190</code>
        </postal>
        <phone>+1 703 948-3200</phone>
        <email>pbarber@verisign.com</email>
        <uri>http://verisign.com</uri>
      </address>
    </author>

    <author fullname="Matt Weinberg" initials="M." surname="Weinberg">
      <organization>Verisign</organization>
      <address>
        <postal>
          <street>12061 Bluemont Way</street>
          <city>Reston</city>
          <region>VA</region>
          <code>20190</code>
        </postal>
        <phone>+1 703 948-3200</phone>
        <email>mweinberg@verisign.com</email>
        <uri>http://verisign.com</uri>
      </address>
    </author>

    <date month="March" year="2018" />

    <area>General</area>

    <workgroup>Internet Engineering Task Force</workgroup>

    <keyword>DNS</keyword>
    <keyword>DNSSEC</keyword>
    <keyword>Checksum</keyword>
    <keyword>Hash</keyword>
    <keyword>Zone Transfer</keyword>

    <abstract>
      <t>
        This document describes a protocol and DNS Resource Record
        used to provide a message digest over DNS zone data.
        In particular, it describes how to compute, sign, represent,
        and use the message digest to validate the contents of a
        zone for accuracy and completeness.
        The &RRNAME; Resource Record type is introduced for conveying
        the message digest data.
      </t>
    </abstract>
  </front>

  <middle>

    <section title="Introduction">
      <t>
        In the DNS, a zone is the collection of authoritative resource
        records (RRs) sharing a common origin (<xref target="RFC7719"/>),
        which can be distributed from primary to secondary name
        servers.
        Zones are often stored as files on disk in the so-called
        master file format <xref target="RFC1034"/>.
        Sometimes zones are distributed outside of the DNS, with
        such protocols as FTP, HTTP, rsync, and so on.
        While zone files are self-contained, currently there is
        no way to validate the authenticity of a stand-alone zone
        file.
      </t>
      <t>
        This document introduces a new RR type that serves as a
        cryptographic message digest of the data in a zone file.
        It allows a receiver of the zone file to validate its
        authenticity, especially when used in combination with DNSSEC.
      </t>
      <t>
        Message digests are also found in the TSIG protocol.
        DNS transaction signatures (TSIG <xref target="RFC2845"/>) uses a message
        digest to protect individual query and response messages.
        TSIG is generally used to authenticate and validate UPDATE <xref target="RFC2136"/>
        AXFR <xref target="RFC5936"/>, and IXFR <xref target="RFC1995"/> messages.
        However, TSIG's protections are ephemeral, existing only "on
        the wire," and are not retained after the transaction is complete.
        Additionally, TSIG utilizes shared secret keys, which
        are not available to third parties.
      </t>
      <t>
        The technique described in this document makes the message
        digest a part of the zone file itself, and allows anyone
        to validate the zone file as a whole, no matter how it is
        transmitted.
      </t>
      <t>
        The zone message digest relies on DNSSEC to provide strong
        security guarantees.  Without DNSSEC, an attacker can modify
        zone data and recalculate the message digest and not be detected.
      </t>
      <t>
        For discussion: currently this document does not require DNSSEC.
        Should it be a prerequisite?
      </t>
      <t>
        The motivation for including a message digest in a zone
        file comes largely from the DNS root zone.
        At the time of this writing, there is increased attention
        to the idea of widely distributing the root zone, beyond
        the root server system.
        <xref target="RFC7706"/> describes how a recursive resolver
        can serve the root zone via a loopback address.
        As the root zone spreads beyond its traditional deployment
        boundaries, the need for validation of the zone contents
        becomes more and more important.
      </t>
      <t>
        Nothing in this specification, however, is specific to the root zone.  The zone digest is
        designed to work equally well for any DNS zone.
      </t>
      <t>
        This specification is OPTIONAL to implement by both publishers
        and consumers of zone file data.
      </t>
    </section>

    <section title="Terminology">
      <t>
        The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
        "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
        document are to be interpreted as described in <xref
          target="RFC2119"/>.
      </t>
    </section>

    <section title="The &RRNAME; Resource Record" anchor="rrtype">
      <t>
        This section describes the &RRNAME; Resource Record, including its fields, wire format, and presentation format.
        The Type value for the &RRNAME; RR is TBD.
        The &RRNAME; RR is class independent.
        The RDATA of the resource record consists of three fields: Serial, Digest Type, and Digest.
      </t>
      <t>
        For discussion: This document is currently written as though
        a zone MUST NOT contain more than one &RRNAME; RR.
        Having exactly one &RRNAME; record per zone could simplify this
        protocol and eliminate confusion around downgrade attacks, at
        the expense of algorithm agility.
      </t>

      <section title="&RRNAME; RDATA Wire Format">
        <t>The &RRNAME; RDATA wire format is encoded as follows:</t>
        <figure><artwork align="left"><![CDATA[
                     1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 3 3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                             Serial                            |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|  Digest Type  |                                               |
+-+-+-+-+-+-+-+-+             Digest                            +
/                                                               /
/                                                               /
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
]]></artwork></figure>

        <section title="The Serial Field">
          <t>
            The Serial field is a 32-bit unsigned integer in network
            order. It is equal to the serial number from the zone's
            SOA record (<xref target="RFC1035"/> section 3.3.13) for
            which the message digest was generated.
          </t>
          <t>
            For Discussion: the serial number is included in order
            to make DNS response messages of type &RRNAME; meaningful.
            Without the serial number, a stand-alone &RRNAME; digest
            has no association to any particular zone file.  If
            &RRNAME; were to be made a so-called meta type that cannot
            be queried for (like OPT), then serial would not be
            necessary.
          </t>
        </section>

        <section title="The Digest Type Field">
          <t>
            The Digest Type field is an 8-bit unsigned integer, with
            meaning equivalent to the Digest Type of the DS resource record,
            as defined in section 5.1.3 of <xref target="RFC4034"/>.
          </t>
          <t>
            The status of &RRNAME; digest types (e.g., mandatory,
            optional, deprecated) SHALL always match the status for
            DS records.  This information can be found in the IANA
            protocol registry for DS digest types <xref target="iana-ds-digest-types"/>.
          </t>
          <t>
            At the time of this writing the following digest types are defined:
          </t>
            <texttable anchor="digest-type-table" title="Digest Types">
            <ttcol align='left'>Value</ttcol>
            <ttcol align='left'>Description</ttcol>
            <ttcol align='left'>Status</ttcol>
            <ttcol align='left'>Reference</ttcol>
            <c>1</c>
            <c>SHA1</c>
            <c>Mandatory</c>
            <c><xref target="RFC3658"/></c>
            <c>2</c>
            <c>SHA256</c>
            <c>Mandatory</c>
            <c><xref target="RFC4509"/></c>
            <c>3</c>
            <c>GOST R 34.11-94</c>
            <c>Optional</c>
            <c><xref target="RFC5933"/></c>
            <c>4</c>
            <c>SHA384</c>
            <c>Optional</c>
            <c><xref target="RFC6605"/></c>
            <!-- postamble>Data from https://www.iana.org/assignments/ds-rr-types/ds-rr-types.xhtml</postamble -->
            </texttable>
        </section>

        <section title="The Digest Field">
          <t>
            The Digest field is a variable-length sequence of octets
            containing the message digest.  <xref target="calculating"/>
            describes how to calculate the digest for a zone.
            <xref target="validating"/> describes how to use the digest to
            validate the contents of a zone.
          </t>
        </section>
      </section>

      <section title="&RRNAME; Presentation Format">
        <t>
          The presentation format of the RDATA portion is as follows:
        </t>
        <t>
          The Serial field MUST be represented as an unsigned decimal integer.
        </t>
        <t>
          The Digest Type field MUST be represented as an unsigned decimal
          integer.
        </t>
        <t>
          The Digest MUST be represented as a sequence of case-insensitive
          hexadecimal digits.  Whitespace is allowed within the hexadecimal
          text.
        </t>
      </section>

      <section title="&RRNAME; Example">
        <t>
          The following example shows a &RRNAME; RR.
        </t>
        <figure><artwork>
example.com. 86400 IN &RRNAME; 2018031500 4 ( FEBE3D4CE2EC2FFA4BA9
                                           9D46CD69D6D29711E552
                                           17057BEE7EB1A7B641A4
                                           7BA7FED2DD5B97AE499F
                                           AFA4F22C6BD647DE )
        </artwork></figure>
      </section>

    </section>

    <section title="Calculating the Digest" anchor="calculating">
      <t>
        Calculation of the zone digest REQUIRES the RRs in a zone
        to be in a consistent format and ordering.  Thus, digest
        calculation uses the canonical form and ordering of RRs as
        described in section 6 of <xref target="RFC4034"/>.
        XXX sort by type.
      </t>
      <t>
        When calculating the zone digest, any existing &RRNAME; records
        MUST first be deleted from the zone.
      </t>
      <t>
        XXX fix wrong assumption.  
        Under the assumption that the zone will be signed with
        DNSSEC, a placeholder &RRNAME; record MUST be added to the
        zone.  In the placeholder record, the Serial field MUST be
        set to the SOA Serial, the Digest Type field MUST be set
        to the value for the chosen digest algorithm, and the Digest
        field MUST be set to all zeroes and of length appropriate
        for the chosen algorithm.
      </t>
      <t>
        Next, the zone MAY be signed with DNSSEC.
      </t>
      <t>
        The zone digest is calculated by concatenating the canonical form of all
        records in the zone, in canonical order, including the &RRNAME; placeholder,
        and including DNSSEC records if the zone is signed, and then applying
        the digest algorithm:
      </t>
      <figure><artwork>
digest = digest_algorithm( RR(1) | RR(2) | RR(3) | ... )

where "|" denotes concatenation, and

RR(i) = owner | type | class | TTL | RDATA length | RDATA
      </artwork></figure>
      <t>
        When AXFR is used to transfer zone data, the first and last
        records are always the SOA RR (<xref target="RFC5936"/>
        Section 2.2).  Because of this, zone files on disk often
        contain two SOA RRs.  When calculating the zone digest, the first
        SOA RR MUST be included and any subsequent SOA RRs MUST be ignored.
      </t>
      <t>
        Once the zone digest has been calculated, its value is then copied to the Digest field of the &RRNAME; record.
      </t>
      <t>
        If the zone is signed with DNSSEC, the appropriate RRSIG records covering the &RRNAME;
        record MUST then be added.  Because the &RRNAME; placeholder was added prior to signing,
        the zone will already have the appropriate denial-of-existence (NSEC, NSEC3) records.
      </t>
    </section>

    <section title="Validating Zone Message Digest" anchor="validating">
      <t>
        The recipient of a zone that has a message digest record can validate the zone
        by calculating the digest as described in <xref target="calculating"/>.
      </t>
      <t>
        The following conditions MUST be true for a successful validation of the zone using the zone digest:
        <list style="numbers">
        <t>The SOA Serial field MUST exactly match the &RRNAME; Serial field.</t>
        <t>The calculated digest MUST exactly match the &RRNAME; Digest field.</t>
        <t>If the zone is signed with DNSSEC, the &RRNAME; RRset MUST have a valid signature, chaining up to a trust anchor.</t>
        </list>
      </t>
      <t>
        For zones signed with DNSSEC, the denial-of-existence records
        can prove the existence or non-existence of the &RRNAME;
        record in the zone.
      </t>
    </section>

    <section title="IANA Considerations" anchor="iana">
      <section title="&RRNAME; RRtype">
        <t>
          This document uses a new DNS RR type, &RRNAME;, whose
          value TBD has been allocated by IANA from the "Resource
          Record (RR) TYPEs" subregistry of the "Domain Name System
          (DNS) Parameters" registry.
        </t>
      </section>
      <section title="&RRNAME; Digest Type">
        <t>
          The &RRNAME; Digest Type field has the same semantics as the DS RR Digest Type field.
          Thus, it does not add new IANA protocol registry requirements.
        </t>
      </section>
    </section>

    <section title="Security Considerations" anchor="security">
      <t>
        For an unsigned zone, an attacker can trivially modify zone content and adjust the zone digest to match.
      </t>
      <t>
        DNSSEC provides stronger security guarantees, but only when a recipient knows to expect a signed zone.  
      </t>
    </section>

    <section title="Privacy Considerations" anchor="privacy">
      <t>None.</t>
    </section>

    <section title="Acknowledgments" anchor="acknowledgments">
      <t>
      </t>
    </section>

    <section anchor="Implementation" title="Implementation Status">
      <t>
      </t>
    </section>

  </middle>
  <back>

    <references title="Normative References">
    &RFC2119;
    &RFC1034;
    &RFC1035;
    &RFC4034;
    &RFC3658;
    &RFC4509;
    &RFC5933;
    &RFC6605;

     <reference anchor="iana-ds-digest-types" target="https://www.iana.org/assignments/ds-rr-types/ds-rr-types.xhtml">
        <front>
          <title>Delegation Signer (DS) Resource Record (RR) Type Digest Algorithms</title>
          <author>
            <organization>IANA</organization>
          </author>
          <date year="2012" month="April" day="3"/>
        </front>
     </reference>

    </references>

    <references title="Informative References">
    &RFC1995;
    &RFC2136;
    &RFC2845;
    &RFC5936;
    &RFC7706;
    &RFC7719;
    </references>

  </back>
</rfc>
